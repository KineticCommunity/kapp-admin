<%!

    public static class SubmissionHelper {

        private HttpServletRequest request;
        private BundleSubmissionComponent submissionComponent;
        private Kapp kapp;

        public SubmissionHelper(HttpServletRequest request) {
            this.request = request;
            this.submissionComponent = (BundleSubmissionComponent)request.getAttribute("Submissions");
            this.kapp = (Kapp)request.getAttribute("kapp");
        }

        public List<Submission> retrieveRecentSubmissions(String type) {
            return retrieveRecentSubmissions(type, null, null);
        }

        public List<Submission> retrieveRecentSubmissions(String type, int number) {
            return retrieveRecentSubmissions(type, null, number);
        }
        
         public List<Submission> retrieveRecentSubmissions(String type, String coreState) {
            return retrieveRecentSubmissions(type, coreState, null);
        }

        public List<Submission> retrieveRecentSubmissions(String type, String coreState, Integer number) {
            com.kineticdata.core.authentication.Identity identity =
                (com.kineticdata.core.authentication.Identity) request.getAttribute("identity");

            java.time.Instant end = Time.now();
            java.time.Instant start = Time
                .subtract(end, 30, "days", java.time.ZoneId.systemDefault());

            java.util.Map<String,String[]> searchOptions = new java.util.HashMap<>();

            searchOptions.put("end", new String[] {Time.format(end)} );
            searchOptions.put("start", new String[] {Time.format(start)} );
            searchOptions.put("type", new String[] {type});
            if (coreState != null) {
                searchOptions.put("coreState", new String[] {coreState});
            }
            if (number != null) {
                searchOptions.put("limit", new String[] {String.valueOf(number)});
            }
            if("Approval".equals(type)){
                searchOptions.put("values[Assigned Individual]", new String[] {identity.getUsername()});
            } else {
                searchOptions.put("createdBy", new String[] {identity.getUsername()});
            }

            return submissionComponent.searchByKapp(kapp, searchOptions);
        }
        
        /************************************************************
         * Helper Methods for getting data our of submissions
         ************************************************************/

         /**
         * Returns the status of the submission, or the core state if status field is not found
         */
        public String getStatus(Submission submission) {
            String value = null;
            if (submission.getForm().getField("Status") != null){
                value = submission.getValue("Status");
            }
            if (value == null) {
                value = submission.getCoreState();
            }
            return value;
        }
        
        /**
         * Returns the class used to style the status or state of the submission
         */
        public String getStatusClass(Submission submission) {
            String className;
            List<String> activeStatuses = (submission.getForm().getAttributeValues("Statuses - Active").size() > 0)
                ? submission.getForm().getAttributeValues("Statuses - Active")
                : submission.getKapp().getAttributeValues("Statuses - Active");
            List<String> inactiveStatuses = (submission.getForm().getAttributeValues("Statuses - Inactive").size() > 0)
                ? submission.getForm().getAttributeValues("Statuses - Inactive")
                : submission.getKapp().getAttributeValues("Statuses - Inactive");
            List<String> cancelledStatuses = (submission.getForm().getAttributeValues("Statuses - Cancelled").size() > 0)
                ? submission.getForm().getAttributeValues("Statuses - Cancelled")
                : submission.getKapp().getAttributeValues("Statuses - Cancelled");
            
            if (submission.getForm().getField("Status") != null && submission.getValue("Status") != null) {
                if (activeStatuses.contains(submission.getValue("Status"))) {
                    className = "label-success";
                } else if (inactiveStatuses.contains(submission.getValue("Status"))) {
                    className = "label-warning";
                } else if (cancelledStatuses.contains(submission.getValue("Status"))) {
                    className = "label-danger";
                } else {
                    className = "label-default";
                }
            } else if ("Draft".equals(submission.getCoreState())) {
                className = "label-warning";
            } else if ("Submitted".equals(submission.getCoreState())) {
                className = "label-success";
            } else {
                className = "label-default";
            }
            return className;
        }
    }
%>
